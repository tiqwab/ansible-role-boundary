---
- name: set boundary_iface
  when: boundary_iface is undefined
  set_fact:
    boundary_iface: "{{ ansible_default_ipv4.interface }}"

- name: set boundary_address
  set_fact:
    boundary_address: "{{ hostvars[inventory_hostname]['ansible_'+boundary_iface]['ipv4']['address'] }}"

- name: check boundary command
  ansible.builtin.shell: which boundary
  changed_when: false  # read-only task
  failed_when: false
  register: check_boundary_command

- name: install Boundary with packages
  when: boundary_install_package|bool
  block:
    - name: install Boundary with Debian packages
      include_tasks: install_package_debian.yml
      when: ansible_os_family == 'Debian'

    - name: install Boundary with RedHat packages
      include_tasks: install_package_redhat.yml
      when: ansible_os_family == 'RedHat'

    - name: install Boundary with Homebrew
      include_tasks: install_package_mac.yml
      when: ansible_os_family == 'Darwin'

- name: install Boundary manually
  include_tasks: install_manual.yml
  when: not boundary_install_package|bool or ansible_os_family not in ['Debian', 'RedHat', 'Darwin']

- name: creating boundary config directory
  file:
    state: directory
    path: '{{ boundary_home_directory }}'
    owner: '{{ boundary_user }}'
    group: '{{ boundary_group }}'
    mode: '0750'

- name: install API TLS certificates
  when: not boundary_tls_disable|bool
  include_tasks: tls_api.yml

- name: install Vault Transit TLS certificates
  when: boundary_kms_type == 'transit'
  include_tasks: tls_vault_transit.yml

- name: configure boundary
  include: config.yml

- name: collect facts about system services
  service_facts:
  register: services_state
  become: true

- name: configure firewall
  include_tasks: firewall.yml

- name: install boundary autocomplete
  include_tasks: autocomplete.yml
